variables:
  FLUTTER_VERSION: 3.7.7
  INTEGRATION_USER1: $INTEGRATION_USER1
  INTEGRATION_PASSWORD1: $INTEGRATION_PASSWORD1
  INTEGRATION_USER2: $INTEGRATION_USER2
  INTEGRATION_PASSWORD2: $INTEGRATION_PASSWORD2
  HOMESERVER: synapse

stages:
  - analyze
  - build
  - test
#  - upload #FIXME upload webbuild and android package


# fetch and extract flutter
.prepare_flutter:
  before_script:
    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz | tar xfJ - -C /tmp
    - export PATH="$PATH:/tmp/flutter/bin"

# update deps and format files
.flutter_deps_and_format:
  before_script:
    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz | tar xfJ - -C /tmp
    - export PATH="$PATH:/tmp/flutter/bin"
    - sed -i "s#git@git.fairkom.net:#https://gitlab-ci-token:$CITOKEN@git.fairkom.net/#g" pubspec.yaml
    - flutter pub get
    - flutter pub run import_sorter:main --no-comments --exit-if-changed
    - flutter format lib/ test/ --set-exit-if-changed
    - mkdir -p assets/js/package

flutter_analyze:
  stage: analyze
  extends:
    - .flutter_deps_and_format
  script: [flutter analyze --no-fatal-infos]

dart_code_metrics_analyze:
  stage: analyze
  extends:
    - .flutter_deps_and_format
  script: ['flutter pub run dart_code_metrics:metrics lib -r gitlab > code-quality-report.json']
  artifacts:
    paths:
      - untranslated-strings.txt
    reports:
      codequality: code-quality-report.json

widget_test:
  stage: test
  extends:
    - .flutter_deps_and_format
  script: |
    flutter pub get
    flutter pub global activate junitreport
    flutter test --coverage --machine > TEST-report.json
    exit_code=$?
    flutter pub global run junitreport:tojunit --input TEST-report.json --output TEST-report.xml
    sed 's/&#x1B;//g' -i TEST-report.xml
    #genhtml -o coverage coverage/lcov.info || true
    curl https://raw.githubusercontent.com/eriwen/lcov-to-cobertura-xml/master/lcov_cobertura/lcov_cobertura.py > lcov_cobertura.py #TODO how to install package without migrating to docker images?
    chmod +x lcov_cobertura.py
    ./lcov_cobertura.py coverage/lcov.info || true
    exit $exit_code
  artifacts:
    when: always
    paths:
      - coverage/
      - coverage.xml
      - TEST-report.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: TEST-report.xml

build_web:
  stage: build
  extends:
    - .prepare_flutter
  script: |
    sed -i "s#git@git.fairkom.net:#https://gitlab-ci-token:$CITOKEN@git.fairkom.net/#g" pubspec.yaml
    ./scripts/prepare-web.sh # FIXME
    flutter config --enable-web
    flutter clean
    flutter pub get
    flutter build web --release --verbose --source-maps
    cp config.sample.json build/web/config.json
  after_script:
    #until https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1057 is implemented
    - apt download zip && dpkg -x zip_*.deb .
    - cd build/web && ../../usr/bin/zip -r webbuild.zip .
  artifacts:
    paths:
      - build/web/webbuild.zip

build_web_profile:
  stage: build
  extends:
    - .prepare_flutter
  script: |
    sed -i "s#git@git.fairkom.net:#https://gitlab-ci-token:$CITOKEN@git.fairkom.net/#g" pubspec.yaml
    ./scripts/prepare-web.sh #FIXME
    flutter config --enable-web
    flutter clean
    flutter pub get
    flutter build web --verbose --source-maps --profile --dart-define=Dart2jsOptimization=O1 #as per https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/build_system/targets/web.dart is O0 possible? does it matter?
    cp config.sample.json build/web/config.json
  after_script:
    #until https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1057 is implemented
    - apt download zip && dpkg -x zip_*.deb .
    - cd build/web && ../../usr/bin/zip -r webbuild.zip .
  artifacts:
    paths:
      - build/web/webbuild.zip

# TODO include config.sample.json?
build_android_apk:
  stage: build
  tags: [docker, rlp]
  script: |
    docker container rm androidimage || true
    docker build -f docker/Dockerfile.android -t fluffy-android --build-arg CITOKEN=$CITOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA .
    docker create --name androidimage fluffy-android
    docker cp androidimage:/home/fluffy/fluffychat/build/app/outputs/flutter-apk/app-debug.apk .
    docker rm androidimage
  artifacts:
    when: on_success
    name: app-debug.apk
    paths:
      - app-debug.apk

      #integration_web:
      #  stage: test
      #  tags: [docker, rlp]
      #  script: |
      #    docker image rm integration-web || true
      #    docker build -f docker/Dockerfile.integration-web -t integration-web --build-arg CITOKEN=$CITOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA --build-arg INTEGRATION_USER1=$INTEGRATION_USER1 --build-arg INTEGRATION_PASSWORD1=$INTEGRATION_PASSWORD1 --build-arg INTEGRATION_USER2=$INTEGRATION_USER2 --build-arg INTEGRATION_PASSWORD2=$INTEGRATION_PASSWORD2 .
      #    docker run --shm-size=512m --rm integration-web

integration_android:
  stage: test
  tags: [docker, rlp]
  variables:
    FF_NETWORK_PER_BUILD: "true"
  script: |
    apk add curl jq
    docker image rm integration-nexus-5 || true
    docker container rm nexus || true
    docker stop synapse || true
    docker stop nexus || true
    docker container rm synapse || true
    rm -rf /builds/shared/fluffy || true
    mkdir -p /builds/shared/fluffy
    cp integration_test/synapse/data/* /builds/shared/fluffy
    chmod 0777 /builds/shared/fluffy
    #FIXME we need to use our synapse build instead!
    docker run -d --name synapse -h $HOMESERVER -v /builds/shared/fluffy:/data matrixdotorg/synapse:latest
    SYNAPSE_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' synapse)
    echo "${SYNAPSE_IP} synapse" >> /etc/hosts
    #docker run --name synapse -v synapse_data:/data -p 80:80 matrixdotorg/synapse:latest
    timeout 30s ./scripts/integration-prepare-homeserver.sh
    docker build -f docker/Dockerfile.integration-nexus-5 -t integration-nexus-5 --build-arg CITOKEN=$CITOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA --build-arg INTEGRATION_USER1=$INTEGRATION_USER1 --build-arg INTEGRATION_PASSWORD1=$INTEGRATION_PASSWORD1 --build-arg INTEGRATION_USER2=$INTEGRATION_USER2 --build-arg INTEGRATION_PASSWORD2=$INTEGRATION_PASSWORD2 .
    docker run --add-host=${HOMESERVER}:${SYNAPSE_IP} --device /dev/kvm --name nexus integration-nexus-5 || true
    docker stop synapse
    docker cp nexus:fluffychat/coverage .
    docker cp nexus:fluffychat/coverage.xml .
    docker cp nexus:fluffychat/TEST-report.xml .
    docker cp nexus:fluffychat/video.mkv .
    docker cp nexus:fluffychat/exit_code .
    sed 's/&#x1B;//g' -i TEST-report.xml
    exit $(cat exit_code)
  coverage: '/lines......: \d+\.\d+%/'
  artifacts:
    when: always
    paths:
      - coverage/
      - coverage.xml
      - TEST-report.xml
      - video.mkv
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: TEST-report.xml

integration_web:
  stage: test
  tags: [docker, rlp]
  variables:
    FF_NETWORK_PER_BUILD: "true"
  script: |
    docker stop synapse-for-web || true
    docker stop synapse || true
    docker container rm -f synapse-for-web || true
    docker container rm -f integration-web-run || true
    docker container rm -f synapse || true
    docker image rm integration-web || true
    rm -rf /builds/shared/fluffy || true
    docker build -f docker/Dockerfile.integration-web -t integration-web --build-arg CITOKEN=$CITOKEN --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA --build-arg INTEGRATION_USER1=$INTEGRATION_USER1 --build-arg INTEGRATION_PASSWORD1=$INTEGRATION_PASSWORD1 --build-arg INTEGRATION_USER2=$INTEGRATION_USER2 --build-arg INTEGRATION_PASSWORD2=$INTEGRATION_PASSWORD2 --build-arg HOMESERVER=$HOMESERVER .
    mkdir -p /builds/shared/fluffy
    cp integration_test/synapse/data/* /builds/shared/fluffy
    chmod 0777 /builds/shared/fluffy
    #FIXME we need to use our synapse build instead!
    docker run -d --name synapse-for-web -h $HOMESERVER -v /builds/shared/fluffy:/data matrixdotorg/synapse:latest
    SYNAPSE_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' synapse-for-web)
    docker run --add-host=${HOMESERVER}:${SYNAPSE_IP} --shm-size=4096m --name integration-web-run integration-web
    docker stop synapse-for-web
