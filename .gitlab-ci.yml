variables:
  FLUTTER_VERSION: 3.0.5

stages:
  - test
  - build
  - upload

# fetch and extract flutter
.prepare_flutter:
  before_script:
    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz | tar xfJ - -C /tmp
    - export PATH="$PATH:/tmp/flutter/bin"

# update deps and format files
.flutter_deps_and_format:
  before_script:
    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz | tar xfJ - -C /tmp
    - export PATH="$PATH:/tmp/flutter/bin"
    - flutter pub get
    - flutter pub run import_sorter:main --no-comments --exit-if-changed
    - flutter format lib/ test/ --set-exit-if-changed

flutter_analyze:
  stage: test
  extends:
    - .flutter_deps_and_format
  script: [flutter analyze]

dart_code_metrics_analyze:
  stage: test
  extends:
    - .flutter_deps_and_format
  script: ['flutter pub run dart_code_metrics:metrics lib -r gitlab > code-quality-report.json']
  #FIXME write analysis script for code-quality-report
  artifacts:
    reports:
      codequality: code-quality-report.json

#widget_test:
#  stage: test
#  before_script:
#    - curl -s https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz | tar xfJ -
#    - export PATH="$PATH:`pwd`/flutter/bin"
#    - git show
#    - flutter --version
#  script: [flutter test]

build_web:
  stage: build
  extends:
    - .prepare_flutter
  script: |
    ./scripts/prepare-web.sh
    flutter config --enable-web
    flutter clean
    flutter pub get
    flutter build web --release --verbose --source-maps
  after_script:
    #until https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1057 is implemented
    - apt download zip && dpkg -x zip_*.deb .
    - cd build/web && ../../usr/bin/zip -r webbuild.zip .
  artifacts:
    paths:
      - build/web/webbuild.zip

#build_android_apk:
#  stage: build
#  before_script:
#    - git apply ./scripts/enable-android-google-services.patch
#    - ./scripts/prepare-android-release.sh
#  script: [./scripts/build-android-apk.sh]
#  tags:
#    - android
#  artifacts:
#    when: on_success
#    paths:
#      - build/android/app-release.apk
#  only:
#    - main
#    - tags
#

#build_linux_x86:
#  stage: build
#  extends:
#    - .prepare_flutter
#  script: |
#    # sudo apt update && DEBIAN_FRONTEND=noninteractive sudo apt install -y keyboard-configuration curl clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev libjsoncpp-dev cmake-data libsecret-1-dev libsecret-1-0 librhash0
#    flutter config --enable-linux-desktop
#    flutter clean
#    flutter pub get
#    flutter build linux --release -v
#  artifacts:
#    when: on_success
#    paths:
#      - build/linux/x64/release/bundle/
#
#.release:
#  stage: upload
#  before_script:
#    #- sudo apt update && DEBIAN_FRONTEND=noninteractive sudo apt install -y curl
#    - export PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/fluffychat/${CI_COMMIT_SHORT_SHA}"

#upload_android:
#  extends: .release
#  script:
#    - |
#      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/android/app-release.apk ${PACKAGE_REGISTRY_URL}/fluffychat.apk
#
#upload_web:
#  extends: .release
#  script:
#    - tar czf package.tar.gz -C build/web/ .
#    - |
#      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file package.tar.gz ${PACKAGE_REGISTRY_URL}/fluffychat-web.tar.gz
#
#upload_linux_x86:
#  extends: .release
#  script:
#    - tar czf package.tar.gz -C build/linux/x64/release/bundle/ .
#    - |
#      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file package.tar.gz ${PACKAGE_REGISTRY_URL}/fluffychat-linux-x86.tar.gz
#
#upload_linux_arm64:
#  extends: .release
#  script:
#    - tar czf package.tar.gz -C build/linux/arm64/release/bundle/ .
#    - |
#      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file package.tar.gz ${PACKAGE_REGISTRY_URL}/fluffychat-linux-arm64.tar.gz
#
